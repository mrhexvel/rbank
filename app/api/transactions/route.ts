import { PrismaClient } from "@prisma/client";
import { verify } from "jsonwebtoken";
import { cookies } from "next/headers";
import { NextResponse } from "next/server";

const prisma = new PrismaClient();

// JWT secret (–≤ —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ —ç—Ç–æ –±—ã–ª–æ –±—ã –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –æ–∫—Ä—É–∂–µ–Ω–∏—è)
const JWT_SECRET = process.env.JWT_SECRET || "your-secret-key";

export async function GET() {
  try {
    // –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω –∏–∑ cookies
    const token = (await cookies()).get("auth_token")?.value;

    if (!token) {
      return NextResponse.json({ message: "–ù–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω" }, { status: 401 });
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–æ–∫–µ–Ω
    try {
      const decoded = verify(token, JWT_SECRET) as {
        id: string;
        email: string;
        name: string;
      };

      // –ü–æ—Å–∫–æ–ª—å–∫—É —É –Ω–∞—Å –Ω–µ—Ç —Ä–µ–∞–ª—å–Ω–æ–π —Ç–∞–±–ª–∏—Ü—ã —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π –≤ —ç—Ç–æ–º –ø—Ä–∏–º–µ—Ä–µ,
      // –º—ã —Å–æ–∑–¥–∞–¥–∏–º —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏
      const transactions = [
        {
          id: "1",
          name: "–ü—Ä–æ–¥—É–∫—Ç–æ–≤—ã–π –º–∞–≥–∞–∑–∏–Ω",
          amount: -5825,
          date: "–°–µ–≥–æ–¥–Ω—è, 10:30",
          category: "–ü–æ–∫—É–ø–∫–∏",
          icon: "üõí",
        },
        {
          id: "2",
          name: "–ó–∞—Ä–ø–ª–∞—Ç–∞",
          amount: 150000,
          date: "–í—á–µ—Ä–∞, 9:15",
          category: "–î–æ—Ö–æ–¥",
          icon: "üí∞",
        },
        {
          id: "3",
          name: "–°—á–µ—Ç –∑–∞ —ç–ª–µ–∫—Ç—Ä–∏—á–µ—Å—Ç–≤–æ",
          amount: -3245,
          date: "20 –º–∞—è, 2024",
          category: "–ö–æ–º–º—É–Ω–∞–ª—å–Ω—ã–µ —É—Å–ª—É–≥–∏",
          icon: "‚ö°",
        },
        {
          id: "4",
          name: "–†–µ—Å—Ç–æ—Ä–∞–Ω",
          amount: -4580,
          date: "18 –º–∞—è, 2024",
          category: "–ï–¥–∞",
          icon: "üçî",
        },
        {
          id: "5",
          name: "–û–Ω–ª–∞–π–Ω –ø–µ—Ä–µ–≤–æ–¥",
          amount: -15000,
          date: "15 –º–∞—è, 2024",
          category: "–ü–µ—Ä–µ–≤–æ–¥",
          icon: "üîÑ",
        },
        {
          id: "6",
          name: "–°—Ç—Ä–∏–º–∏–Ω–≥–æ–≤—ã–π —Å–µ—Ä–≤–∏—Å",
          amount: -649,
          date: "12 –º–∞—è, 2024",
          category: "–†–∞–∑–≤–ª–µ—á–µ–Ω–∏—è",
          icon: "üé¨",
        },
        {
          id: "7",
          name: "–§—Ä–∏–ª–∞–Ω—Å –æ–ø–ª–∞—Ç–∞",
          amount: 35000,
          date: "10 –º–∞—è, 2024",
          category: "–î–æ—Ö–æ–¥",
          icon: "üíª",
        },
        {
          id: "8",
          name: "–ê–ó–°",
          amount: -2530,
          date: "8 –º–∞—è, 2024",
          category: "–¢—Ä–∞–Ω—Å–ø–æ—Ä—Ç",
          icon: "‚õΩ",
        },
      ];

      // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –¥–∞–Ω–Ω—ã–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π
      return NextResponse.json({ transactions });
    } catch (error) {
      return NextResponse.json(
        { message: "–ù–µ–¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã–π —Ç–æ–∫–µ–Ω" },
        { status: 401 }
      );
    }
  } catch (error) {
    console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π:", error);
    return NextResponse.json(
      { message: "–í–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –æ—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞" },
      { status: 500 }
    );
  } finally {
    await prisma.$disconnect();
  }
}
